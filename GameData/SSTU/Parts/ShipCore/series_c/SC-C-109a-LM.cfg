PART
{
module = Part
name = SSTU_ShipCore_C_LM
author = Shadowmage

TechRequired = veryHeavyRocketry
entryCost = 6500
cost = 320
category = Engine
subcategory = 0
title = SC-C - LM
manufacturer = SSTU
description = Ship Core - Series C - Lander Module.  Includes descent engines and fuel, parachutes, and landing gear.

MODEL
{
	model = SSTU/Assets/SC-C-109a-LM
}
rescaleFactor = 1

//FX
fx_exhaustFlame_blue = 0.0, -.652, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustLight_blue = 0.0, -.652, 0.0, 0.0, 0.0, 1.0, running
fx_smokeTrail_light = 0.0, -.652, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustSparks_flameout = 0.0, -.652, 0.0, 0.0, 1.0, 0.0, flameout
sound_vent_medium = engage
sound_rocket_hard = running
sound_vent_soft = disengage
sound_explosion_low = flameout

// nodes/attachment 
// node position specification: posX,posY,posZ,axisX,axisY,axisZ,size
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
node_stack_top = 0,1,0,0,1,0,2
node_stack_bottom = 0,-1,0,0,-1,0,2
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 3.25
//dragModelType = default //no clue what this does...
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 14
maxTemp = 3400
fuelCrossFeed = True

//mass breakdown
//fuel cylinder:
//landing legs:
//engines:
//frame:
//total:

//cylinder volume (m^3)
//2.5m central: 9.754
//total = 9.754m^3 raw volume
//raw resources = 864L, 1056O

RESOURCE
{
	name = LiquidFuel
	amount = 864
	maxAmount = 864
}
RESOURCE
{
	name = Oxidizer
	amount = 1056
	maxAmount = 1056
}
MODULE
{
      name = ModuleAnimateHeat
      ThermalAnim = LMEngineHeatEmissive
}
MODULE
{
      name = ModuleAnimateHeat
      ThermalAnim = LMEngineHeatEmissive2
}
MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = RadialEngineThrustTransform
	exhaustDamage = True
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 660
	heatProduction = 350
	fxOffset = 0, 0, 0.8
	PROPELLANT
	{
		name = LiquidFuel
        	ratio = 0.9
		DrawGauge = True
	}
	PROPELLANT
	{
		name = Oxidizer
		ratio = 1.1
	}
	atmosphereCurve
 	{
   	 key = 0 440
  	 key = 1 220
 	}
}
MODULE
{
	name = ModuleGimbal
	gimbalTransformName = RadialEngineThrustTransform
	gimbalRange = 2
}
MODULE
{
	name = ModuleLandingLeg
	animationName = LMDeployLegs
	wheelColliderName = Leg1WheelCollider
	suspensionTransformName = Leg1SuspensionTransform
	suspensionUpperLimit = 0.23
	impactTolerance = 2000
	suspensionSpring = 50
	suspensionDamper = 25
}
MODULE
{
	name = ModuleLandingLeg
	animationName = LMDeployLegs
	wheelColliderName = Leg2WheelCollider
	suspensionTransformName = Leg2SuspensionTransform
	suspensionUpperLimit = 0.23
	impactTolerance = 2000
	suspensionSpring = 50
	suspensionDamper = 25
}
MODULE
{
name = FSanimateGeneric
animationName = LMDeployEngines
animSpeed = 1
startEventGUIName = Deploy Engines
endEventGUIName = Retract Engines
toggleActionName = Toggle Engine Deployment
startDeployed = False
startDeployedString = Start Engines Deployed?
customAnimationSpeed = 1.0
availableInEVA = True
availableInVessel = True
EVArange = 5
//-- Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 1
//-- If true, clicking on the part in the Action Group editor pops up a menu asking if the part should start deployed. Also useful for things like cargo bay doors where you want o to open them to place stuff inside, then close before launch.
useActionEditorPopup = True
//-- If you have more than one FSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 0
//-- To make it obvious that this part has animation abilities, the animation can play once, from deployed to retracted state when the part is spawned/loaded. This only happens in the editor, not in flight.
//playAnimationOnEditorSpawn = True
//-- Set the default location of the hangar GUI window (Optional)
//defaultWindowRect = 550, 300, 150, 100
//-- play a named part effect from an fx node when in different states of delpy/retract. Meant for sounds, but any fx should work.
//fullyRetractedEffect = 
//fullyDeployedEffect = 
//startDeployEffect = 
//startRetractEffect = 
}
MODULE
{
      name = FlagDecal
      textureQuadName = FlagTransform
}
}