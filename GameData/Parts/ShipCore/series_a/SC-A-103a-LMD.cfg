PART
{
module = Part
name = SSTU_ShipCore_A_LMD
author = Shadowmage

TechRequired = advLanding
entryCost = 9600
cost = 1675
category = Engine
subcategory = 0
title = SSTU-SC-A-103a - Lander Module Descent Stage
manufacturer = SSTU
description = Ship Core - Series A - Lander Module Descent Stage.  Includes descent engine and fuel, landing and rear lights, and landing gear.

MODEL
{
	model = SSTU/Assets/SC-A-103a-LMD
}
rescaleFactor = 1

//FX
fx_exhaustFlame_blue = 0.0, -.652, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustLight_blue = 0.0, -.652, 0.0, 0.0, 0.0, 1.0, running
fx_smokeTrail_light = 0.0, -.652, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustSparks_flameout = 0.0, -.652, 0.0, 0.0, 1.0, 0.0, flameout
sound_vent_medium = engage
sound_rocket_hard = running
sound_vent_soft = disengage
sound_explosion_low = flameout

// nodes/attachment 
// node position specification: posX,posY,posZ,axisX,axisY,axisZ,size
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
node_stack_top = 0,.2025784,0,0,1,0,2
node_stack_bottom = 0,-0.6941391,0,0,-1,0,2
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 2.74
//dragModelType = default //no clue what this does...
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 14
maxTemp = 3400
fuelCrossFeed = False
emissiveConstant = 0.8
bulkheadProfiles = size2
RESOURCE
{
	name = ElectricCharge
	amount = 150
	maxAmount = 150
}
RESOURCE
{
	name = LiquidFuel
	amount = 297
	maxAmount = 297
}
RESOURCE
{
	name = Oxidizer
	amount = 363
	maxAmount = 363
}
MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = LMEngineThrustTransform
	exhaustDamage = True
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 135
	heatProduction = 250
	fxOffset = 0, 0, 0.81
	PROPELLANT
	{
		name = LiquidFuel
        	ratio = 0.9
		DrawGauge = True
	}
	PROPELLANT
	{
		name = Oxidizer
		ratio = 1.1
	}
	atmosphereCurve
 	{
   	 key = 0 360
  	 key = 1 160
 	}
}
MODULE
{
	name = ModuleGimbal
	gimbalTransformName = LMEngineThrustTransform
	gimbalRange = 1
}
MODULE
{
      name = ModuleAnimateHeat
      ThermalAnim = LMEngineHeatEmissive
}
//MODULE
//{
//	name = ModuleAnimateGeneric
//	animationName = LMRearLightOn
//	isOneShot = false   
//	startEventGUIName = Rear Light On
//	endEventGUIName = Rear Light Off
//	actionGUIName = Toggle Rear Light
//}
//MODULE
//{
//	name = ModuleAnimateGeneric
//	animationName = LMLandingLightOn
//	isOneShot = false   
//	startEventGUIName = Landing Light On
//	endEventGUIName = Landing Light Off
//	actionGUIName = Toggle Landing Light
//}
MODULE
{	
	name = ModuleLandingLeg
	animationName = LMDeployLegs
	wheelColliderName = LMLeg1WheelCollider
	suspensionTransformName = LMLeg1SuspensionTransform
	suspensionUpperLimit = .25
	impactTolerance = 450
	suspensionSpring = 10
	suspensionDamper = 3
}
MODULE
{	
	name = ModuleLandingLeg
	animationName = LMDeployLegs
	wheelColliderName = LMLeg2WheelCollider
	suspensionTransformName = LMLeg2SuspensionTransform
	suspensionUpperLimit = .25
	impactTolerance = 450
	suspensionSpring = 10
	suspensionDamper = 3
}
MODULE
{	
	name = ModuleLandingLeg
	animationName = LMDeployLegs
	wheelColliderName = LMLeg3WheelCollider
	suspensionTransformName = LMLeg3SuspensionTransform
	suspensionUpperLimit = .25
	impactTolerance = 450
	suspensionSpring = 10
	suspensionDamper = 3
}
MODULE
{	
	name = ModuleLandingLeg
	animationName = LMDeployLegs
	wheelColliderName = LMLeg4WheelCollider
	suspensionTransformName = LMLeg4SuspensionTransform
	suspensionUpperLimit = .25
	impactTolerance = 450
	suspensionSpring = 10
	suspensionDamper = 3
}
//MODULE
//{
//	name = ModuleLight
//	lightName = Light1Transform
//	useAnimationDim = true
//	lightBrightenSpeed = 2.5
//	lightDimSpeed = 2.5
//	resourceAmount = 0.04
//	animationName = LMLandingLightOn
//	useResources = true
//}
//MODULE
//{
//	name = ModuleLight
//	lightName = Light2Transform
//	useAnimationDim = true
//	lightBrightenSpeed = 2.5
//	lightDimSpeed = 2.5
//	resourceAmount = 0.04
//	animationName = LMRearLightOn
//	useResources = true
//}
MODULE
{
name = FSanimateGeneric
animationName = LMLandingLightOn
animSpeed = 1
startEventGUIName = Landing Light On
endEventGUIName = Landing Light Off
toggleActionName = Toggle Landing Light
startDeployed = False
startDeployedString = Start On?
customAnimationSpeed = 1.0
availableInEVA = True
availableInVessel = True
EVArange = 5
//-- Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 1
//-- If true, clicking on the part in the Action Group editor pops up a menu asking if the part should start deployed. Also useful for things like cargo bay doors where you want o to open them to place stuff inside, then close before launch.
useActionEditorPopup = True
//-- If you have more than one FSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 0
//-- To make it obvious that this part has animation abilities, the animation can play once, from deployed to retracted state when the part is spawned/loaded. This only happens in the editor, not in flight.
//playAnimationOnEditorSpawn = True
//-- Set the default location of the hangar GUI window (Optional)
//defaultWindowRect = 550, 300, 150, 100
//-- play a named part effect from an fx node when in different states of delpy/retract. Meant for sounds, but any fx should work.
//fullyRetractedEffect = 
//fullyDeployedEffect = 
//startDeployEffect = 
//startRetractEffect = 
}
MODULE
{
name = FSanimateGeneric
animationName = LMRearLightOn
animSpeed = 1
startEventGUIName = Rear Light On
endEventGUIName = Rear Light Off
toggleActionName = Toggle Rear Light
startDeployed = False
startDeployedString = Start On?
customAnimationSpeed = 1.0
availableInEVA = True
availableInVessel = True
EVArange = 5
//-- Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 2
//-- If true, clicking on the part in the Action Group editor pops up a menu asking if the part should start deployed. Also useful for things like cargo bay doors where you want o to open them to place stuff inside, then close before launch.
useActionEditorPopup = True
//-- If you have more than one FSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 1
//-- To make it obvious that this part has animation abilities, the animation can play once, from deployed to retracted state when the part is spawned/loaded. This only happens in the editor, not in flight.
//playAnimationOnEditorSpawn = True
//-- Set the default location of the hangar GUI window (Optional)
//defaultWindowRect = 550, 300, 150, 100
//-- play a named part effect from an fx node when in different states of delpy/retract. Meant for sounds, but any fx should work.
//fullyRetractedEffect = 
//fullyDeployedEffect = 
//startDeployEffect = 
//startRetractEffect = 
}
}